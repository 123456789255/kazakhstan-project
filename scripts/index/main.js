// js/main.js
import { favorites, loadFavorites, renderFavorites } from './favorites.js';
import { setupFilters, applyFilters, populateFilters } from './filters.js';
import { openModal, closeModal, loadReviews } from './modal.js';
import { setupMobileMenu, setupAnchorScroll } from './header.js';

// –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ placesData –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ
let filteredPlaces = placesData.slice();

document.addEventListener("DOMContentLoaded", () => {
  const placesContainer = document.getElementById("places-container");
  const favoritesContainer = document.getElementById("favorites-container");

  loadFavorites();
  loadReviews();
  populateFilters(placesData);
  setupFilters(() => {
    filteredPlaces = applyFilters(placesData);
    renderPlaces(filteredPlaces);
  }, () => {
    filteredPlaces = placesData.slice();
    renderPlaces(filteredPlaces);
  });

  setupMobileMenu();
  setupAnchorScroll();

  renderPlaces(filteredPlaces);
  renderFavorites(favoritesContainer, (place) => openModal(place, favoritesContainer));

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  document.querySelector(".close-btn").addEventListener("click", closeModal);
  window.addEventListener("click", (e) => {
    if (e.target.id === "modal") {
      closeModal();
    }
  });
});

function renderPlaces(data) {
  const container = document.getElementById("places-container");
  container.innerHTML = "";

  if (data.length === 0) {
    container.innerHTML = "<p>–ü–æ –¥–∞–Ω–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –Ω–µ—Ç –º–µ—Å—Ç.</p>";
    return;
  }

  data.forEach(place => {
    const card = document.createElement("div");
    card.classList.add("place-card");
    card.innerHTML = `
      <img src="${place.image}" alt="${place.title}" />
      <h3>${place.title}</h3>
      <p><strong>–†–µ–≥–∏–æ–Ω:</strong> ${place.region}</p>
      <p><strong>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> ${place.type}</p>
      <p><strong>–†–µ–π—Ç–∏–Ω–≥:</strong> ‚≠ê ${place.rating}</p>
      <button class="details-btn">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
      <button class="favorite-btn">–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ</button>
    `;

    card.querySelector(".details-btn").addEventListener("click", () => {
      openModal(place, document.getElementById("favorites-container"));
    });

    card.querySelector(".favorite-btn").addEventListener("click", () => {
      const exists = favorites.some(fav => fav.id === place.id);
      if (!exists) {
        favorites.push(place);
        localStorage.setItem("favorites", JSON.stringify(favorites));
        renderFavorites(document.getElementById("favorites-container"), (p) => openModal(p, document.getElementById("favorites-container")));
        alert(`${place.title} –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!`);
      } else {
        alert(`${place.title} —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º.`);
      }
    });

    container.appendChild(card);
  });
}

















// // ------------------------------------------------------------------
// // üåç –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ DOM-—ç–ª–µ–º–µ–Ω—Ç—ã
// // ------------------------------------------------------------------
// let filteredPlaces = placesData;
// let favorites = [];
// let reviews = {};

// const container = document.getElementById("places-container");
// const favoritesContainer = document.getElementById("favorites-container");
// const header = document.getElementById("header");
// const body = document.body;

// // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
// const modal = document.getElementById("modal");
// const modalImg = document.getElementById("modal-img");
// const modalTitle = document.getElementById("modal-title");
// const modalDescription = document.getElementById("modal-description");
// const modalRegion = document.getElementById("modal-region");
// const modalCategory = document.getElementById("modal-category");
// const modalRating = document.getElementById("modal-rating");
// const addToFavoritesBtn = document.getElementById("addToFavorites");
// const removeFromFavoritesBtn = document.getElementById("removeFromFavorites");
// const closeBtn = document.querySelector(".close-btn");

// // –§–∏–ª—å—Ç—Ä—ã
// const searchInput = document.getElementById("searchInput");
// const regionFilter = document.getElementById("regionFilter");
// const typeFilter = document.getElementById("typeFilter");
// const ratingFilter = document.getElementById("ratingFilter");

// // –•—ç–¥–µ—Ä –∏ –º–µ–Ω—é
// const hamb = document.querySelector("#hamb");
// const popup = document.querySelector("#popup");
// const menu = document.querySelector("#menu").cloneNode(true);

// // ------------------------------------------------------------------
// // üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
// // ------------------------------------------------------------------
// document.addEventListener("DOMContentLoaded", () => {
//   loadFavorites();
//   loadReviews();
//   renderPlaces(filteredPlaces);
//   updateFavoritesUI();
//   populateFilters();
//   setupFilters();
// });

// // ------------------------------------------------------------------
// // üß© –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
// // ------------------------------------------------------------------
// function loadFavorites() {
//   const saved = localStorage.getItem("favorites");
//   if (saved) favorites = JSON.parse(saved);
// }

// function loadReviews() {
//   const saved = localStorage.getItem("reviews");
//   if (saved) reviews = JSON.parse(saved);
// }

// // ------------------------------------------------------------------
// // üñº –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –º–µ—Å—Ç
// // ------------------------------------------------------------------
// function renderPlaces(data) {
//   container.innerHTML = "";
//   if (data.length === 0) {
//     container.innerHTML = "<p>–ü–æ –¥–∞–Ω–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –Ω–µ—Ç –º–µ—Å—Ç.</p>";
//     return;
//   }

//   data.forEach((place) => {
//     const card = document.createElement("div");
//     card.className = "place-card";
//     card.innerHTML = `
//       <img src="${place.image}" alt="${place.title}" />
//       <h3>${place.title}</h3>
//       <p><strong>–†–µ–≥–∏–æ–Ω:</strong> ${place.region}</p>
//       <p><strong>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> ${place.type}</p>
//       <p><strong>–†–µ–π—Ç–∏–Ω–≥:</strong> ‚≠ê ${place.rating}</p>
//       <button class="details-btn">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
//       <button class="favorite-btn">–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ</button>
//     `;

//     card.querySelector(".favorite-btn").addEventListener("click", () => toggleFavorite(place));
//     card.querySelector(".details-btn").addEventListener("click", () => openModal(place));

//     container.appendChild(card);
//   });
// }

// // ------------------------------------------------------------------
// // ‚≠ê –†–∞–±–æ—Ç–∞ —Å –∏–∑–±—Ä–∞–Ω–Ω—ã–º
// // ------------------------------------------------------------------
// function toggleFavorite(place) {
//   const exists = favorites.some(fav => fav.id === place.id);
//   if (!exists) {
//     favorites.push(place);
//     saveFavorites();
//     updateFavoritesUI();
//     alert(`${place.title} –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!`);
//   } else {
//     alert(`${place.title} —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º.`);
//   }
// }

// function saveFavorites() {
//   localStorage.setItem("favorites", JSON.stringify(favorites));
// }

// function updateFavoritesUI() {
//   favoritesContainer.innerHTML = favorites.length === 0
//     ? "<p>–ü–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç.</p>"
//     : "";

//   favorites.forEach(place => {
//     const card = document.createElement("div");
//     card.className = "place-card";
//     card.innerHTML = `
//       <img src="${place.image}" alt="${place.title}" />
//       <h3>${place.title}</h3>
//       <p><strong>–†–µ–≥–∏–æ–Ω:</strong> ${place.region}</p>
//       <p><strong>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> ${place.type}</p>
//       <p><strong>–†–µ–π—Ç–∏–Ω–≥:</strong> ‚≠ê ${place.rating}</p>
//       <button class="details-btn">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
//       <button class="remove-btn">–£–¥–∞–ª–∏—Ç—å</button>
//     `;

//     card.querySelector(".remove-btn").addEventListener("click", () => {
//       favorites = favorites.filter(fav => fav.id !== place.id);
//       saveFavorites();
//       updateFavoritesUI();
//     });

//     card.querySelector(".details-btn").addEventListener("click", () => openModal(place));
//     favoritesContainer.appendChild(card);
//   });
// }

// // ------------------------------------------------------------------
// // ü™ü –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
// // ------------------------------------------------------------------
// function openModal(place) {
//   body.classList.add("noscroll");

//   Object.assign(modalImg, { src: place.image, alt: place.title });
//   modalTitle.textContent = place.title;
//   modalDescription.textContent = place.description || "–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.";
//   modalRegion.textContent = place.region;
//   modalCategory.textContent = place.type;
//   modalRating.textContent = place.rating;

//   const isFavorite = favorites.some(fav => fav.id === place.id);
//   addToFavoritesBtn.classList.toggle("hidden", isFavorite);
//   removeFromFavoritesBtn.classList.toggle("hidden", !isFavorite);

//   addToFavoritesBtn.onclick = () => {
//     toggleFavorite(place);
//     closeModal();
//   };

//   removeFromFavoritesBtn.onclick = () => {
//     favorites = favorites.filter(fav => fav.id !== place.id);
//     saveFavorites();
//     updateFavoritesUI();
//     alert(`${place.title} —É–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.`);
//     closeModal();
//   };

//   setupReviewForm(place.id);
//   renderReviews(place.id);
//   modal.classList.remove("hidden");
// }

// function closeModal() {
//   modal.classList.add("hidden");
//   body.classList.remove("noscroll");
// }

// closeBtn.addEventListener("click", closeModal);
// window.addEventListener("click", e => { if (e.target === modal) closeModal(); });

// // ------------------------------------------------------------------
// // üí¨ –û—Ç–∑—ã–≤—ã
// // ------------------------------------------------------------------
// function setupReviewForm(placeId) {
//   const reviewForm = document.getElementById("reviewForm");
//   const reviewAuthor = document.getElementById("reviewAuthor");
//   const reviewText = document.getElementById("reviewText");
//   const reviewRating = document.getElementById("reviewRating");

//   reviewForm.onsubmit = (e) => {
//     e.preventDefault();

//     const author = reviewAuthor.value.trim();
//     const text = reviewText.value.trim();
//     const rating = parseInt(reviewRating.value, 10);

//     if (!author || !text) return;

//     const newReview = {
//       author, text, rating,
//       date: new Date().toLocaleDateString()
//     };

//     if (!reviews[placeId]) reviews[placeId] = [];
//     reviews[placeId].push(newReview);
//     localStorage.setItem("reviews", JSON.stringify(reviews));

//     renderReviews(placeId);
//     reviewForm.reset();
//   };
// }

// function renderReviews(placeId) {
//   const reviewsList = document.getElementById("reviewsList");
//   reviewsList.innerHTML = "";

//   const placeReviews = reviews[placeId] || [];

//   if (placeReviews.length === 0) {
//     reviewsList.innerHTML = "<p>–ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤.</p>";
//     return;
//   }

//   placeReviews.forEach((review, index) => {
//     const div = document.createElement("div");
//     div.className = "review-item";
//     div.innerHTML = `
//       <p><strong>${review.author}</strong><br />(${review.date})</p>
//       <span>${"‚≠êÔ∏è".repeat(review.rating)}</span>
//       <p>${review.text}</p>
//       <button class="delete-review" data-index="${index}">–£–¥–∞–ª–∏—Ç—å</button>
//     `;

//     div.querySelector(".delete-review").addEventListener("click", () => {
//       reviews[placeId].splice(index, 1);
//       localStorage.setItem("reviews", JSON.stringify(reviews));
//       renderReviews(placeId);
//     });

//     reviewsList.appendChild(div);
//   });
// }

// // ------------------------------------------------------------------
// // üîç –§–∏–ª—å—Ç—Ä—ã
// // ------------------------------------------------------------------

// function setupFilters() {
//   [searchInput, regionFilter, typeFilter, ratingFilter].forEach(input => {
//     input.addEventListener("input", applyFilters);
//   });

//   document.getElementById("resetButton").addEventListener("click", () => {
//     searchInput.value = "";
//     regionFilter.selectedIndex = 0;
//     typeFilter.selectedIndex = 0;
//     ratingFilter.selectedIndex = 0;
//     applyFilters();
//   });
// }

// function applyFilters() {
//   const searchValue = searchInput.value.toLowerCase();
//   const regionValue = regionFilter.value;
//   const typeValue = typeFilter.value;
//   const ratingValue = parseFloat(ratingFilter.value);

//   filteredPlaces = placesData.filter(place => {
//     const matchesSearch = place.title.toLowerCase().includes(searchValue);
//     const matchesRegion = !regionValue || place.region === regionValue;
//     const matchesType = !typeValue || place.type === typeValue;
//     const matchesRating = isNaN(ratingValue) || place.rating >= ratingValue;

//     return matchesSearch && matchesRegion && matchesType && matchesRating;
//   });

//   renderPlaces(filteredPlaces);
// }

// function populateFilters() {
//   const regions = new Set();
//   const types = new Set();

//   placesData.forEach(place => {
//     regions.add(place.region);
//     types.add(place.type);
//   });

//   regionFilter.innerHTML = '<option value="">–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã</option>';
//   typeFilter.innerHTML = '<option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>';

//   regions.forEach(region => {
//     const option = document.createElement("option");
//     option.value = region;
//     option.textContent = region;
//     regionFilter.appendChild(option);
//   });

//   types.forEach(type => {
//     const option = document.createElement("option");
//     option.value = type;
//     option.textContent = type;
//     typeFilter.appendChild(option);
//   });
// }

// // ------------------------------------------------------------------
// // üß≠ –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —è–∫–æ—Ä—è–º
// // ------------------------------------------------------------------

// function getYOffsetForScreenWidth() {
//   const screenWidth = window.innerWidth;
//   const headerHeight = header.offsetHeight;

//   if (screenWidth >= 1078) return -50;
//   if (screenWidth > 768) return -100;
//   return -180;
// }

// function scrollToAnchor(anchorId) {
//   const element = document.getElementById(anchorId);
//   if (element) {
//     const yOffset = getYOffsetForScreenWidth();
//     const y = element.getBoundingClientRect().top + window.scrollY + yOffset;
//     window.scrollTo({ top: y, behavior: "smooth" });
//   }
// }

// document.querySelectorAll('a[href^="#"]').forEach(link => {
//   link.addEventListener("click", e => {
//     e.preventDefault();
//     const anchorId = link.getAttribute("href").substring(1);
//     scrollToAnchor(anchorId);
//   });
// });


// // ------------------------------------------------------------------
// // üì± Popup (–º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é)
// // ------------------------------------------------------------------

// hamb.addEventListener("click", () => {
//   popup.classList.toggle("open");
//   hamb.classList.toggle("active");
//   body.classList.toggle("noscroll");
//   renderPopup();
// });

// function renderPopup() {
//   if (!popup.contains(menu)) {
//     popup.appendChild(menu);
//   }
// }

// // –ó–∞–∫—Ä—ã—Ç–∏–µ popup –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É (jQuery)
// jQuery($ => {
//   $(document).on("click", ".link", function () {
//     $("#popup").removeClass("open");
//     $("#hamb").removeClass("active");
//     $("body").removeClass("noscroll");
//     $("header").removeClass("header-fixed");
//   });
// });











// üìã –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ

// 1. –¶–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞
// –°–æ–∑–¥–∞—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –≤–µ–±-—Å–∞–π—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ –∫—É–ª—å—Ç—É—Ä–Ω—ã—Ö –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞, —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ–∏—Å–∫–∞, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏, –æ—Ç–∑—ã–≤–æ–≤ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç.

// 2. –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
// üîπ–ö–∞—Ç–∞–ª–æ–≥ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π
//  –ö–∞—Ä—Ç–æ—á–∫–∏ –æ–±—ä–µ–∫—Ç–æ–≤ (–Ω–∞–∑–≤–∞–Ω–∏–µ, —Ñ–æ—Ç–æ, –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, –∫–∞—Ç–µ–≥–æ—Ä–∏—è, —Ä–µ–≥–∏–æ–Ω, —Ä–µ–π—Ç–∏–Ω–≥).
//  –ö–Ω–æ–ø–∫–∞ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ" ‚Äî –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–ª–∏ –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.
//  –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ:
//  –†–µ–≥–∏–æ–Ω—É (–æ–±–ª–∞—Å—Ç–∏)
//  –¢–∏–ø—É (–ø—Ä–∏—Ä–æ–¥–∞, –º—É–∑–µ–π, —Ñ–µ—Å—Ç–∏–≤–∞–ª—å –∏ —Ç.–¥.)
// –†–µ–π—Ç–∏–Ω–≥—É
// –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é

// üîπ–ò–∑–±—Ä–∞–Ω–Ω–æ–µ
// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
// –•—Ä–∞–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ LocalStorage

// üîπ–û—Ç–∑—ã–≤—ã –∏ —Ä–µ–π—Ç–∏–Ω–≥–∏
// –ö–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç –∏–º–µ–µ—Ç –æ—Ç–∑—ã–≤—ã
// –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞ (–∏–º—è, –æ—Ü–µ–Ω–∫–∞, —Ç–µ–∫—Å—Ç)
// –û—Ç–∑—ã–≤—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ PHP-–±–∞–∑–µ –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ (–Ω–∞ —ç—Ç–∞–ø–µ –±–µ–∑ –±—ç–∫–µ–Ω–¥–∞)
// üîπ–ê—Ñ–∏—à–∞
// –û—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª —Å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º–∏ (—Ñ–µ—Å—Ç–∏–≤–∞–ª–∏, –ø—Ä–∞–∑–¥–Ω–∏–∫–∏)
// –ö–∞—Ä—Ç–æ—á–∫–∏ —Å –¥–∞—Ç–æ–π, –º–µ—Å—Ç–æ–º, –æ–ø–∏—Å–∞–Ω–∏–µ–º

// üîπ–ë–ª–æ–≥
// –°—Ç–∞—Ç—å–∏ –æ –∫—É–ª—å—Ç—É—Ä–µ –∏ —Ç—Ä–∞–¥–∏—Ü–∏—è—Ö
// –ü—Ä–æ—Å—Ç–æ–π markdown-–ø–∞—Ä—Å–µ—Ä –∏–ª–∏ HTML-—Ä–µ–¥–∞–∫—Ç–æ—Ä (–µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–∞–µ—à—å –∞–¥–º–∏–Ω–∫—É)

// üîπ–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ)
// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π, —Å–æ–±—ã—Ç–∏–π, —Å—Ç–∞—Ç–µ–π
// –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–ø—Ä–æ—Å—Ç–∞—è —Ñ–æ—Ä–º–∞ –ª–æ–≥–∏–Ω–∞)
// –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ PHP + SQLite –∏–ª–∏ JSON


// 3. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
// –Ø–∑—ã–∫: HTML5, CSS3, JavaScript (Vanilla), PHP (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω —Å–µ—Ä–≤–µ—Ä)
// –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å: –î–∞ (–º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –æ–±—è–∑–∞–Ω–∞ –±—ã—Ç—å —É–¥–æ–±–Ω–æ–π)
// SEO: –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –≤–µ—Ä—Å—Ç–∫–∞
// –°–∫–æ—Ä–æ—Å—Ç—å: –ë—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
// –•–æ—Å—Ç–∏–Ω–≥: Netlify, GitHub Pages –∏–ª–∏ –ª—é–±–æ–π —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π PHP

// 4. –î–∏–∑–∞–π–Ω
// –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π, —á–∏—Å—Ç—ã–π UI
// –í–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å—Å—è —Å–∞–π—Ç–∞–º–∏ —Ç–∏–ø–∞ https://culturetrip.com
// –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞: –∑–µ–º–ª—è–Ω—ã–µ –∏ —ç—Ç–Ω–∏—á–µ—Å–∫–∏–µ –æ—Ç—Ç–µ–Ω–∫–∏
// UI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: –∫–∞—Ä—Ç–æ—á–∫–∏, —Ç–∞–±—ã, –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞, –∑–≤–µ–∑–¥–æ—á–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∏


// üß† –ü—Ä–æ—Ç–æ—Ç–∏–ø (–≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ)
// ```
// [–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞]
// - –•–µ–¥–µ—Ä: –ª–æ–≥–æ—Ç–∏–ø | –ö–∞—Ç–∞–ª–æ–≥ | –ê—Ñ–∏—à–∞ | –ë–ª–æ–≥ | –ò–∑–±—Ä–∞–Ω–Ω–æ–µ
// - –ü–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ + —Ñ–∏–ª—å—Ç—Ä—ã (—Ä–µ–≥–∏–æ–Ω, —Ç–∏–ø, —Ä–µ–π—Ç–∏–Ω–≥)
// - –ö–∞—Ä—Ç–æ—á–∫–∏ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π (—Ñ–æ—Ç–æ, –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ä–µ–π—Ç–∏–Ω–≥, –∫–Ω–æ–ø–∫–∞ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ" / "‚òÜ –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")

// [–ú–æ–¥–∞–ª–∫–∞/—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏]
// - –ë–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
// - –ù–∞–∑–≤–∞–Ω–∏–µ, —Ä–µ–≥–∏–æ–Ω, –∫–∞—Ç–µ–≥–æ—Ä–∏—è, —Ä–µ–π—Ç–∏–Ω–≥
// - –û–ø–∏—Å–∞–Ω–∏–µ
// - –°–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤
// - –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞

// [–ò–∑–±—Ä–∞–Ω–Ω–æ–µ]
// - –û—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –∫–∞—Ä—Ç–æ—á–∫–∏

// [–ê—Ñ–∏—à–∞]
// - –°–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π (—Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ –∏–ª–∏ —Ä–µ–≥–∏–æ–Ω—É)
// - –ö–∞—Ä—Ç–æ—á–∫–∏ —Å –¥–∞—Ç–æ–π –∏ –º–µ—Å—Ç–æ–º

// [–ë–ª–æ–≥]
// - –°–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π
// - –ß—Ç–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ (–æ—Ç–¥–µ–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)

// [–ê–¥–º–∏–Ω–∫–∞] (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
// - –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞
// - –ü–∞–Ω–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫, —Å–æ–±—ã—Ç–∏–π, —Å—Ç–∞—Ç–µ–π
// ```
// üß≠ –ü–ª–∞–Ω —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ —à–∞–≥–∞–º

// üîπ –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
//  –°–æ–∑–¥–∞–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub
//  –°–≤–µ—Ä—Å—Ç–∞–π –∫–∞—Ä–∫–∞—Å –ø—Ä–æ–µ–∫—Ç–∞: index.html, style.css, scripts.js
//  –ü–æ–¥–∫–ª—é—á–∏ –±–∞–∑–æ–≤—ã–π —à–∞–±–ª–æ–Ω —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –∏ —Ñ—É—Ç–µ—Ä–æ–º
// üîπ –®–∞–≥ 2: –ö–∞—Ç–∞–ª–æ–≥ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π
//  –°–æ–∑–¥–∞–π JSON-—Ñ–∞–π–ª –∏–ª–∏ JS-–º–∞—Å—Å–∏–≤ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ, —Ñ–æ—Ç–æ, —Ç–∏–ø, —Ä–µ–≥–∏–æ–Ω, —Ä–µ–π—Ç–∏–Ω–≥)
//  –†–µ–∞–ª–∏–∑—É–π –æ—Ç—Ä–∏—Å–æ–≤–∫—É –∫–∞—Ä—Ç–æ—á–µ–∫ —á–µ—Ä–µ–∑ JavaScript
//  –î–æ–±–∞–≤—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –∏ –ø–æ–∏—Å–∫
//  –†–µ–∞–ª–∏–∑—É–π –∏–∑–±—Ä–∞–Ω–Ω–æ–µ —á–µ—Ä–µ–∑ LocalStorage
//  –û—Ç–∫—Ä–æ–π –∫–∞—Ä—Ç–æ—á–∫—É –≤ –º–æ–¥–∞–ª–∫–µ –∏–ª–∏ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
// üîπ –®–∞–≥ 3: –û—Ç–∑—ã–≤—ã
//  –î–æ–±–∞–≤—å —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
//  –°–æ—Ö—Ä–∞–Ω—è–π –æ—Ç–∑—ã–≤—ã –≤ LocalStorage –∏–ª–∏ –≤ JSON-–º–∞—Å—Å–∏–≤
//  (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –î–æ–±–∞–≤—å PHP-–æ–±—Ä–∞–±–æ—Ç–∫—É —Å –∑–∞–ø–∏—Å—å—é –≤ —Ñ–∞–π–ª
// üîπ –®–∞–≥ 4: –ê—Ñ–∏—à–∞ –∏ –±–ª–æ–≥
//  –°–¥–µ–ª–∞–π –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É "–ê—Ñ–∏—à–∞" ‚Äî —Å–æ–±—ã—Ç–∏—è, –¥–∞—Ç—ã
//  –°–¥–µ–ª–∞–π —Å—Ç—Ä–∞–Ω–∏—Ü—É "–ë–ª–æ–≥" ‚Äî —Å—Ç–∞—Ç—å–∏, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
//  –ò—Å–ø–æ–ª—å–∑—É–π –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –≤–∏–∑—É–∞–ª–∞
// üîπ –®–∞–≥ 5: –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –∞–Ω–∏–º–∞—Ü–∏–∏
//  –î–æ–±–∞–≤—å –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å—Ç–∫—É (media queries)
//  –î–æ–±–∞–≤—å –∞–Ω–∏–º–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, scroll reveal, hover —ç—Ñ—Ñ–µ–∫—Ç—ã)
// üîπ –®–∞–≥ 6: –ê–¥–º–∏–Ω–∫–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
//  –ü—Ä–æ—Å—Ç–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (–ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å)
//  –§–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π/—Å–æ–±—ã—Ç–∏–π/—Å—Ç–∞—Ç–µ–π
//  –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ JSON-—Ñ–∞–π–ª –∏–ª–∏ SQLite
// üîπ –®–∞–≥ 7: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏ –¥–µ–ø–ª–æ–π
//  –ü—Ä–æ–≤–µ—Ä—å –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, SEO
//  –°–¥–µ–ª–∞–π favicon –∏ social preview image
//  –ó–∞–¥–µ–ø–ª–æ–π –Ω–∞ Netlify –∏–ª–∏ Vercel
//  –ü–æ–¥–µ–ª–∏—Å—å —Å—Å—ã–ª–∫–æ–π –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ